#!/usr/bin/env bash

set -euo pipefail

# Call block to block the commit with a message.
block() {
		echo "$@"
    echo "Commit blocked - see errors above."
    exit 1
}

# Check .circleci/config.yml is up to date and valid, and that all changes are
# included together in this commit.
(
  # Change to the root dir of the repo.
  cd "$(git rev-parse --show-toplevel)"

  # Fail early if we accidentally used '.yaml' instead of '.yml'
  if ! git diff --name-only --cached --exit-code -- '.circleci/***.yaml'; then
    # This is just for consistency, as I keep making this mistake - Sam.
    block "ERROR: File(s) with .yaml extension detected. Please rename them .yml instead."
  fi
  
  # Succeed early if no changes to yml files in .circleci/ are currently staged.
  # make ci-verify is slow so we really don't want to run it unnecessarily.
  if git diff --name-only --cached --exit-code -- '.circleci/***.yml'; then
    exit 0
  fi
	
	# Make sure to add no explicit output before this line, as it would just be noise
	# for those making non-circleci changes.
	echo Verifying config changes in .circleci/
	echo "--> OK: All files are .yml not .yaml"

  # Ensure commit includes _all_ files in .circleci/
	# So not only are the files up to date, but we are also committing them in one go.
  if ! git diff --name-only --exit-code -- '.circleci/***.yml'; then
		echo "ERROR: Some .yml diffs in .circleci/ are staged, others not."
		block "Please commit the entire .circleci/ directory together, or omit it altogether."
	fi

	echo "--> OK: All .yml files in .circleci are staged."

  if ! make -C .circleci ci-verify; then
		block "ERROR: make ci-verify failed"
  fi

	echo "--> OK: make ci-verify succeeded."
)
